import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.*

def fosnrs = [2401,2402,2403,2404,2405,2406,2407,2408,2421,2422,2423,2424,2425,2426,2427,2428,2429,2445,2455,2456,2457,2461,2463,2464,2465,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2491,2492,2493,2495,2497,2498,2499,2500,2501,2502,2503,2511,2513,2514,2516,2517,2518,2519,2520,2523,2524,2525,2526,2527,2528,2529,2530,2532,2534,2535,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2553,2554,2555,2556,2571,2572,2573,2574,2575,2576,2578,2579,2580,2581,2582,2583,2584,2585,2586,2601,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622]

task exportXTF_Fixpunktkonzept(type: Ili2pgExport) {
    description = "Exportiert sämtliche Daten in eine INTERLIS-Transferdatei."
    database = [targetDbUrl, targetDbUser, targetDbPass]
    models = "SO_AV_Fixpunktkonzept_2017_20180203"
    modeldir = "http://models.geo.admin.ch;../ili/" 
    dbschema = dbSchema
    disableValidation = true
    //topics = 'Resultate'
    dataFile = "av-fixpunktkonzept-2017.xtf"
}

fosnrs.each { fosnr ->
    def gem_bfs = fosnr.toString()
    task "exportCSV_LFP3_auf_GP_$fosnr"(type: CsvExport) {
    description = "Exportiert die zu löschenden LFP3 (auf GP) in eine CSV-Datei (ohne Geometrie) für die Gemeinde $fosnr"
        database = [targetDbUrl, targetDbUser, targetDbPass]
        schemaName = dbSchema
	    tableName = "v_berechnungen_lfp3_auf_gp_"+gem_bfs
        firstLineIsHeader=true
        dataFile = "lfp3_auf_gp_"+gem_bfs+".csv"

    }
}

task exportCSV_LFP3_auf_GP() {
    description = "Aggregationstask für das Exportieren der LFP auf GP CSV-Dateien."
    doLast {
        println "All dynamic tasks were performed."
    }
}

exportCSV_LFP3_auf_GP.dependsOn {
    tasks.findAll { task -> task.name.startsWith('exportCSV_LFP3_auf_GP_') }
}

/*
task exportCSV_LFP3_auf_GP(type: CsvExport) {
    description = "Exportiert die zu löschenden LFP3 (auf GP) in eine CSV-Datei (ohne Geometrie)."    
    database = [targetDbUrl, targetDbUser, targetDbPass]
	schemaName = dbSchema
	tableName = "berechnungen_lfp3_auf_gp"
	firstLineIsHeader=true
	//attributes = [ "t_id","nummer", "bfs_nr"]
    dataFile = "lfp3_auf_gp.csv"
}
*/

task exportSHP_LFP3_auf_GP(type: ShpExport){
    description = "Exportiert die zu löschenden LFP3 (auf GP) in eine Shapedatei."    
    database = [targetDbUrl, targetDbUser, targetDbPass]
	schemaName = dbSchema
	tableName = "berechnungen_lfp3_auf_gp"
    dataFile = "lfp3_auf_gp.shp"
}

task exportSHP_LFP2_Resultat(type: ShpExport){
    description = "Exportiert die zukünftigen LFP2 (und LFP1 / LV95)"    
    database = [targetDbUrl, targetDbUser, targetDbPass]
	schemaName = dbSchema
	tableName = "resultate_lfp"
    dataFile = "resultate_lfp.shp"
}